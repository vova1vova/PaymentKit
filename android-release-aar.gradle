// ./gradlew clean build generateRelease
apply plugin: 'maven'

def groupId = project.PUBLISH_GROUP_ID
def artifactId = project.PUBLISH_ARTIFACT_ID
def version = project.PUBLISH_VERSION
def releaseDest = project.PUBLISH_REPOSITORY

// copy javaDoc and sources to repository
//task androidJavadocs(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//    classifier = 'javadoc'
//    from androidJavadocs.destinationDir
//}
//
//task androidSourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
//
//artifacts {
//    archives androidSourcesJar
//    archives androidJavadocsJar
//}
// END copy javaDoc and sources to repository

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
        // Add other pom properties here if you want (developer details / licenses)
        repository(url: releaseDest)
    }
}

//task zipRelease(type: Zip) {
//    from localReleaseDest
//    destinationDir buildDir
//    archiveName "release-${version}.zip"
//}

task generateRelease << {
    println "Release ${version} can be found at ${releaseDest}/"
//    println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
}

generateRelease.dependsOn(uploadArchives)
//generateRelease.dependsOn(zipRelease)